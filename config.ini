
[device]
adapter = hci0
mac_addr = 6C:B2:FD:86:82:4D
alias = BT-TH-FD86824D
type = RNG_BATT
# RNG_CTRL      => Charge Controller (Rover/Wanderer/Adventurer)
# RNG_CTRL_HIST => Charge Controller historical data
# RNG_BATT      => Smart Battery
# RNG_INVT      => Inverter
# RNG_DCC       => DC Charger
device_id = 48,49,50,51 # hub mode battery IDs (comma-separated)
# adjust the ids to match your installation

[data]
enable_polling = true # periodically read data
poll_interval = 10 # read data interval (seconds)
temperature_unit = F # F = Fahrenheit, C = Celsius
fields = # fields to log (comma separated), leave empty for all fields

[remote_logging]
enabled = false
url = https://example.com/post.php
auth_header = auth_header # optional HTTP header sent as "Authorization: Bearer <AUTH_HEADER>"

[mqtt]
enabled = true
server = 192.168.1.89
port = 1883
topic = solar/state
user =
password =
homeassistant_discovery = true

[pvoutput]
# free accounts has a cap of max one request per minute.
enabled = false
api_key =
system_id =

[home_assistant_proxy]
enabled = true
# with_renogy_client: Set to true to run both BT proxy AND Renogy client together
# Set to false to run as a standalone ESP32 BT proxy (default: false)
with_renogy_client = false

# use_native_api: Set to true to use ESPHome native API (port 6053)
# This makes the device appear in Home Assistant's ESPHome integration
# Set to false to use HTTP endpoints (legacy mode)
use_native_api = true
native_api_port = 6053
device_name = renogy-bt-proxy

# HTTP mode settings (used when use_native_api = false)
host = homeassistant.local
port = 8123
ssl = false
endpoint = /api/bluetooth/adv
fallback_endpoints = /api/bluetooth/remote/adv,/ble/advertisements

# BLE scanning settings
adapter = hci0
source = BT-TH-FD86824D-proxy
